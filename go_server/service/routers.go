/*
 * ICC PROJECT
 *
 * Welcome to use ICC product
 *
 * API version: 1.0.0
 * Contact: 
 * Generated by: lcu
 */

package service

import (
	"fmt"
	"log"
	"net/http"
	"strings"
	"github.com/gorilla/mux"
)

type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

type Routes []Route

type ConfigSetting struct {
	mysql Mysql
	redis Redis
	mlog *log.Logger
}
var configSetting ConfigSetting

func NewRouter(mysql Mysql, redis Redis, mlog *log.Logger) *mux.Router {
	configSetting = ConfigSetting {
		mysql,
		redis,
		mlog,
	}
	router := mux.NewRouter().StrictSlash(true)
	for _, route := range routes {
		var handler http.Handler
		handler = route.HandlerFunc
		handler = MiddleHandler(Logger(handler, route.Name))
		router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}
	return router
}

func Index(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintf(w, "Hello World!")
}

var routes = Routes{
	Route{
		"Index",
		"GET",
		"/",
		Index,
	},

	Route{
		"CreateUser",
		strings.ToUpper("Post"),
		"/user",
		CreateUser,
	},

	Route{
		"CreateUsersWithArrayInput",
		strings.ToUpper("Post"),
		"/user/createWithArray",
		CreateUsersWithArrayInput,
	},

	Route{
		"CreateUsersWithListInput",
		strings.ToUpper("Post"),
		"/user/createWithList",
		CreateUsersWithListInput,
	},

	Route{
		"DeleteUser",
		strings.ToUpper("Delete"),
		"/user/{username}",
		DeleteUser,
	},

	Route{
		"GetUserByName",
		strings.ToUpper("Get"),
		"/user/{username}",
		GetUserByName,
	},

	Route{
		"UpdateUser",
		strings.ToUpper("Put"),
		"/user/{username}",
		UpdateUser,
	},

	Route{
		"LoginUser",
		strings.ToUpper("Get"),
		"/login/user",
		LoginUser,
	},

	Route{
		"LogoutUser",
		strings.ToUpper("Get"),
		"/logout/user",
		LogoutUser,
	},

}
